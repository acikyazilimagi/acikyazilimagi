---
import type { CollectionEntry } from "astro:content";
import Icon from "astro-icon";
import {
  SITE,
  USE_POST_IMG_OVERLAY,
  USE_AUTHOR_CARD,
  USE_SUBSCRIPTION,
} from "$/config";
import MainLayout from "$/components/main-layout.astro";
import BaseHead from "$/components/base-head.astro";
import Prose from "$/components/prose.astro";
import EditLink from "$/components/edit-link.astro";

interface Props {
  meta?: {
    id: string;
    slug: string;
    collection: string;
  };
  content: CollectionEntry<"blog">["data"];
  stats?: {
    views: number;
  };
}
const { content, meta } = Astro.props;

const AUTHOR_NAME = content.author
  ? content.author
  : SITE?.author
    ? SITE?.author
    : "Author";
const AUTHOR_TWITTER = content.authorTwitter
  ? content.authorTwitter
  : SITE?.authorTwitter
    ? SITE?.authorTwitter
    : "";
const AUTHOR_AVATAR = content.authorImage
  ? content.authorImage
  : SITE?.authorImage
    ? SITE?.authorImage
    : "";
---

<!doctype html>
<html lang="tr">
  <head>
    <BaseHead
      {...content}
      title={content.title ? `${SITE.title} | ${content.title}` : SITE.title}
    />
  </head>
  <MainLayout>
    <div class="post__header">
      <h1 class="post__title">{content.title}</h1>
      <h5 class={`post__desc ${AUTHOR_AVATAR ? "flex flex-row gap-2" : ""}`}>
        {
          AUTHOR_AVATAR ? (
            <img
              class="avatar"
              src={AUTHOR_AVATAR}
              alt={`${AUTHOR_NAME} profil resmi`}
            />
          ) : (
            ""
          )
        }
        <div class={AUTHOR_AVATAR ? "flex flex-col border-l-2 pl-2" : ""}>
          {
            AUTHOR_TWITTER ? (
              <a
                class="post__author"
                href={`https://twitter.com/${AUTHOR_TWITTER}`}
                title={`${AUTHOR_NAME} twitter`}
                target="_blank"
                rel="external"
              >
                {AUTHOR_NAME}
              </a>
            ) : (
              <span class="post__author">{AUTHOR_NAME}</span>
            )
          }
          {!AUTHOR_AVATAR ? " | " : ""}
          <span class="post__date">
            <!-- post creation/updation data -->
            {
              new Intl.DateTimeFormat("tr-TR", { dateStyle: "full" }).format(
                new Date(content.date),
              )
            }
          </span>
        </div>
      </h5>
    </div>
    {
      content.image ? (
        USE_POST_IMG_OVERLAY ? (
          <>
            <div class="img__outer">
              <img src={content.image} alt={content.title} />
              <div class="img_gradient" />
            </div>
            <br />
          </>
        ) : (
          <>
            <img class="img__outer" src={content.image} alt={content.title} />
            <br />
          </>
        )
      ) : (
        ""
      )
    }
    <Prose>
      <slot />
    </Prose>
    <div class="post__tags">
      {
        content.tags !== undefined && content.tags.length > 0 && (
          <div>
            <span>Etiketler:</span>
            {content.tags.map((tag) => (
              <a class="post__tag" href={`/blog/tags/${tag}`} title={tag}>
                {tag}
              </a>
            ))}
          </div>
        )
      }
    </div>
    <div class="post__footer">
      {
        USE_AUTHOR_CARD && (
          <>
            <br />
            <div class="author-card">
              {AUTHOR_AVATAR ? (
                <img
                  class="author-card__img avatar avatar--lg"
                  src={AUTHOR_AVATAR}
                  alt={`${AUTHOR_NAME} profile resmi`}
                />
              ) : (
                ""
              )}
              <div class="author-card__meta">
                {AUTHOR_TWITTER ? (
                  <a
                    class="author-card__author"
                    href={`https://twitter.com/${AUTHOR_TWITTER}`}
                    title={`${AUTHOR_NAME} twitter`}
                    target="_blank"
                    rel="external"
                  >
                    {AUTHOR_NAME}
                  </a>
                ) : (
                  <span class="author-card__author">{AUTHOR_NAME}</span>
                )}
                <p class="author-card__bio">{SITE.authorBio}</p>
                <br />
                {USE_SUBSCRIPTION ? (
                  <form action="" class="subscription-form">
                    <label for="email" />
                    <input
                      type="email"
                      name="email"
                      class="flex-grow border-0 text-theme-accent-slate-dark"
                      required="true"
                    />
                    <button type="submit">Abone ol</button>
                  </form>
                ) : (
                  <a
                    class="author-card__follow-btn button"
                    target="_blank"
                    href={`https://twitter.com/intent/follow?screen_name=${AUTHOR_TWITTER}`}
                  >
                    <Icon
                      class="w-5 h-5 inline-block"
                      pack="mdi"
                      name="twitter"
                    />{" "}
                    Twitter'da takip et
                  </a>
                )}
              </div>
            </div>
            <br />
          </>
        )
      }
      {
        meta?.collection && meta?.id && (
          <EditLink
            label="Bu içeriği GitHub'da revize et"
            editUrl={`${SITE.githubUrl}/tree/main/src/content/${meta?.collection}/${meta?.id}`}
          />
        )
      }
    </div>
  </MainLayout>
  <style>
    .post__header {
      @apply py-4 mb-1 text-center md:text-left;
    }
    .post__title {
      @apply text-5xl font-extrabold text-theme-primary dark:text-theme-dark-primary;
    }
    .post__desc {
      @apply text-slate-500 dark:text-slate-100 flex justify-center text-left md:flex-none md:justify-start mt-4;
    }
    .post__author {
      @apply no-underline dark:text-white hover:text-theme-primary;
    }
    .post__date,
    .post__stats {
      @apply text-slate-400;
    }
    .post__tags {
      @apply inline-flex gap-2 mt-12;
    }
    .post__tag {
      @apply text-slate-400 hover:text-theme-primary dark:hover:text-theme-dark-primary;
    }

    .avatar {
      @apply w-12 h-12 rounded-full object-cover p-1 border-2 border-solid border-theme-dark-primary dark:border-theme-primary;
    }
    .avatar--lg {
      @apply w-32 h-32;
    }

    .img__outer {
      @apply relative rounded-lg shadow-xl overflow-hidden;
    }
    .img_gradient {
      @apply absolute z-10 w-full bottom-0 left-0 h-full bg-gradient-to-tr from-theme-primary dark:from-theme-dark-primary;
    }

    .author-card {
      @apply text-slate-500 dark:text-slate-100 flex flex-row gap-4 justify-start text-left;
    }
    .author-card__meta {
      @apply border-l pl-4;
    }
    .author-card__author {
      @apply text-2xl mb-1;
    }
    .author-card__bio {
      @apply text-slate-400;
    }

    .subscription-form {
      @apply w-4/6 mt-2 flex flex-row rounded-lg overflow-hidden shadow-lg;
    }
    .subscription-form input {
      @apply flex-grow border-0 text-theme-accent-slate-dark;
    }
    .subscription-form button,
    .button {
      @apply pl-4 pr-6 py-3 font-semibold text-white bg-theme-primary dark:bg-theme-dark-primary;
    }
    .subscription-form button svg,
    .button svg {
      @apply mb-1;
    }
    .author-card__follow-btn {
      @apply rounded-md transition-all;
    }
  </style>
</html>
